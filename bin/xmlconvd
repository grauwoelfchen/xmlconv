#!/usr/bin/env ruby
# XmlConv -- xmlconv2 -- 10.05.2012 -- yasaka@ywesee.com
# XmlConv -- xmlconv2 -- 07.06.2004 -- hwyss@ywesee.com

require 'drb/drb'
require 'odba/connection_pool'
require 'xmlconv/config'
require 'xmlconv/util/application'
require 'xmlconv/util/autoload'
require 'logger'

config = XmlConv::CONFIG

log_file = config.log_file
if(log_file.is_a?(String))
	FileUtils.mkdir_p(File.dirname(log_file))
	log_file = File.open(log_file, 'a')
	at_exit { log_file.close }
end
logger = Logger.new(log_file)
logger.level = Logger.const_get(config.log_level)
logger.info(config.program_name) do
  require 'pp'
  config.pretty_inspect
end
XmlConv::LOGGER = logger

XmlConv::Util.autoload(config.plugin_dir, 'plugin')
XmlConv::Util.autoload(config.postproc_dir, 'postproc')

ODBA.storage.dbi = ODBA::ConnectionPool.new("DBI:Pg:#{config.db_name}",
                                            config.db_user, config.db_auth)
ODBA.cache.setup
ODBA.cache.prefetch

$0 = config.program_name
DRb.start_service(config.server_url, XmlConvApp.new)
logger.info(config.program_name) { "drb-service listening on #{config.server_url}" }

DRb.thread.join
